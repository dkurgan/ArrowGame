{"version":3,"sources":["Components/Button.js","Components/Archer.js","Components/Arrow.js","Components/Target.js","Components/Playground.js","App.js","helper/randomNum.js","index.js"],"names":["Button","onClick","Archer","className","Arrow","leftPos","arrowVisible","style","left","opacity","Target","Playground","arrowX","App","useState","arrowPos","setArrowPos","setArrowVisible","clicked","setClicked","target","setTarget","score","setScore","timer","setTimer","intervalId","setInterval","intervalState","setIntervalState","getRandomTarget","min","max","random","Math","floor","console","log","targetPos","document","querySelector","offsetLeft","clearInterval","distance","diference","abs","calculateScore","ReactDOM","render"],"mappings":"sKAEe,SAASA,EAAT,GAA4B,IAAXC,EAAU,EAAVA,QAC5B,OACI,wBAAQA,QAASA,EAAjB,kBCHO,SAASC,IAEpB,OACI,qBAAKC,UAAU,WCFR,SAASC,EAAT,GAA2C,IAA1BC,EAAyB,EAAzBA,QAASC,EAAgB,EAAhBA,aACrC,OACI,qBAAKH,UAAU,QAAQI,MAAO,CAACC,KAAMH,EAASI,QAASH,KCFhD,SAASI,IACpB,OACI,qBAAKP,UAAU,WCCR,SAASQ,EAAT,GAA6C,IAAxBC,EAAuB,EAAvBA,OAAQN,EAAe,EAAfA,aACxC,OACI,sBAAKH,UAAU,aAAf,UACI,cAACD,EAAD,IACA,cAACQ,EAAD,IACA,cAACN,EAAD,CAAOC,QAASO,EAAQN,aAAeA,O,MCJpC,SAASO,IAAO,IAAD,EACMC,mBAAS,GADf,mBACnBC,EADmB,KACTC,EADS,OAEcF,mBAAS,GAFvB,mBAEnBR,EAFmB,KAELW,EAFK,OAGIH,oBAAS,GAHb,mBAGnBI,EAHmB,KAGVC,EAHU,OAIEL,mBAAS,GAJX,mBAInBM,EAJmB,KAIXC,EAJW,OAKAP,mBAAS,GALT,mBAKnBQ,EALmB,KAKZC,EALY,OAMAT,mBAAS,GANT,mBAMnBU,EANmB,KAMZC,EANY,KAOpBC,EAAaC,aAAY,kBAAMF,EAASD,EAAQ,MAAM,KAPlC,EAQgBV,mBAAS,MARzB,mBAQnBc,EARmB,KAQJC,EARI,KA4B1B,SAASC,IACL,ICnC0BC,EAAKC,EDmCzBC,GCnCoBF,EDmCD,GCnCMC,EDmCF,IClC1BE,KAAKC,MAAMD,KAAKD,UAAYD,EAAMD,EAAM,IAAMA,GDmCjDK,QAAQC,IAAIJ,EAAQ,0BACpBZ,EAAUY,GAsBd,OACI,sBAAK9B,UAAU,OAAf,UACI,cAACQ,EAAD,CAAYC,OAAQG,EAAUT,aAAcA,IAC5C,8BAAMgB,IACN,cAACtB,EAAD,CAAQC,QAxBhB,WACI,GAAIiB,EAIA,OAHAW,EAAiBH,GACjBP,GAAW,QACXW,IAGJ,IAAMQ,EAAYC,SAASC,cAAc,WAAWC,WACpD,GAAI1B,IAAauB,EAIb,OAHArB,EAAgB,GAChBD,EAAY,QACZG,GAAW,GAGfuB,cAAcd,GAtClB,WACI,IAAMe,EAAmB,EAARnB,EAAY,GAC7BY,QAAQC,IAAR,wBAA6BM,IAC7B,IAAMC,EAAYV,KAAKW,IAAIF,EAAWvB,GACtC,OAAQwB,GACJ,KAAMA,GAAa,GAAKA,GAAa,EACjCrB,EAASD,EAAQ,GACjB,MACJ,KAAMsB,GAAa,GAAMA,GAAa,EAClCrB,EAASD,EAAQ,GACjB,MACJ,KAAMsB,GAAa,GAAKA,EAAY,EAChCrB,EAASD,EAAQ,GAKzBG,EAAS,GAsBTqB,GACAV,QAAQC,IAAIb,GACZP,EAAgB,GAChBD,EAAYsB,SErDpBS,IAASC,OAAO,cAACnC,EAAD,IAAS0B,SAASC,cAAc,Y","file":"static/js/main.68e1ab3d.chunk.js","sourcesContent":["import React from 'react';\n\nexport default function Button({onClick}) {\n    return (\n        <button onClick={onClick}>Play</button>\n    )\n}","import React from 'react';  \nexport default function Archer() {\n    \n    return (\n        <div className='archer'/>\n    )\n}","import React from 'react';\n\nexport default function Arrow({ leftPos, arrowVisible }) {\n    return (\n        <div className=\"arrow\" style={{left: leftPos, opacity: arrowVisible}}/>\n    )\n}","import React from 'react';\n\nexport default function Target() {\n    return (\n        <div className=\"target\"/>\n    )\n}","import React from 'react';\nimport Archer from './Archer';\nimport Arrow from './Arrow';\nimport Target from './Target';\n\nexport default function Playground({arrowX, arrowVisible}) {\n    return (\n        <div className=\"playground\" >\n            <Archer />\n            <Target />\n            <Arrow leftPos={arrowX} arrowVisible={ arrowVisible}/>\n        </div>\n    )\n}","import React, {useState } from 'react';\nimport Button from './Components/Button';\nimport Playground from './Components/Playground';\nimport randomNum from './helper/randomNum';\nimport './Styles.css';\n\nexport default function App() {\n    const [arrowPos, setArrowPos] = useState(0);\n    const [arrowVisible, setArrowVisible] = useState(0);\n    const [clicked, setClicked] = useState(true);\n    const [target, setTarget] = useState(0);\n    const [score, setScore] = useState(0);\n    const [timer, setTimer] = useState(0.0);\n    const intervalId = setInterval(() => setTimer(timer + 0.1), 100);\n    const [intervalState, setIntervalState] = useState(null);\n    function calculateScore() {\n        const distance = timer * 5 * 10;\n        console.log(`shot distance ${distance}`);\n        const diference = Math.abs(distance - target);\n        switch (diference) {\n            case (diference >= 2 && diference <= 3):\n                setScore(score + 1)\n                break;\n            case (diference >= 1  && diference <= 2):\n                setScore(score + 3)\n                break;\n            case (diference >= 0 && diference < 1):\n                setScore(score + 5)\n                break;\n            default:\n                break;\n        }\n        setTimer(0);\n    }\n    function getRandomTarget() {\n        const random = randomNum(20, 100);\n        console.log(random, \"distance to the target\")\n        setTarget(random);\n    }\n    function fireArrow() {\n        if (clicked) {\n            setIntervalState(intervalId);\n            setClicked(false);\n            getRandomTarget();\n            return;\n        }\n        const targetPos = document.querySelector('.target').offsetLeft;\n        if (arrowPos === targetPos) {\n            setArrowVisible(0);\n            setArrowPos(0);\n            setClicked(true);\n            return\n        }\n        clearInterval(intervalState);\n        calculateScore();\n        console.log(timer)\n        setArrowVisible(1);\n        setArrowPos(targetPos);\n    }\n    return (\n        <div className=\"root\">\n            <Playground arrowX={arrowPos} arrowVisible={arrowVisible} />\n            <div>{score}</div>\n            <Button onClick={fireArrow} />\n        </div>\n    )\n}","export default function randomNum(min, max) {\n    return Math.floor(Math.random() * (max - min + 1)) + min;\n  }\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App'\n\nReactDOM.render(<App />, document.querySelector('#root'));"],"sourceRoot":""}